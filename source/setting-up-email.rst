Setting up email
================

While users of the systems will not normally need to browse or send email *via* the systems, we still need an email capacity: for verifying accounts, sending warnings etc. Working this in with the Imperial mail system introduces other complexities: Imperial don't want anyone from outside the college firewall sending email via their systems (incongruous with their normal users accessing email from home but whatever) and so another delivery point is required. Fortunately Amazon have recently introduced their email service, SES. Unfortunately, it is still is beta. 


Signing up for SES & configuring it
-----------------------------------

Go to the SES service on the AWS console. 

Create a set of smtp settings. These are not the same as AWS credentials, and are random alphanumerics for username and password on the SMTP service.

Note the server name and ports to be used, e.g.::

	email-smtp.eu-west-1.amazonaws.com
	25, 465 or 587

.. note::
	In practice, the lower port seesm to be only partly functional or time-out frequently. 587 seems to work well. Be sure you can communicate out through your firewall policy.

Initially, SES is only set up to allow you to send email to and from "verified" addresses, i.e. the recipient has to click an url in an email sent to that address. Needless to say, this is near useless for anything but testing. Request production access, which removes mailing limits and verification of "to" addresses. 

.. note::
	The "from" addresses must still be verified, although this is not made clear in the documentation. Therefore you must be careful to see all mail is sent from the right addresses.
	
DKIM can be enabled for your domain. It is far and away easier for this to be done if the DNS records are hosted at Route 53. Go to "domains" and click the necessary buttons for the right fields to be attached to your records. Note this will take (by default) about 30 minutes to go live. After that you can enable DKIM from the same place.
	


Setting up postfix
------------------

Postfix is always to be preferred over sendmail, due to the huge number of security wholes. At the same time, many postfix installations come with lots of bells and whistles, which we are not interested in. 

Follow your usual postfix installation process and add the following to the end of `/etc/postfix/main.cf`::

	## AWS voodoo
	inet_interfaces    = loopback-only
	masquerade_domains = $mydomain
	
	## as supplied on SES pages
	relayhost = email-smtp.eu-west-1.amazonaws.com:587
	smtp_sasl_auth_enable = yes
	smtp_sasl_security_options = noanonymous
	smtp_sasl_tls_security_options = noanonymous
	smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd
	smtp_use_tls = yes
	smtp_tls_security_level = encrypt
	smtp_tls_note_starttls_offer = yes

	smtp_tls_CAfile = /etc/ssl/certs/ca-bundle.crt

Edit your credentials into `/etc/postfix/sasl_passwd`::

	email-smtp.eu-west-1.amazonaws.com:587 <secret id>:<secret key>

Compile it::

	% postmap hash:/etc/postfix/sasl_passwd


Testing with mutt
-----------------

It's handy to test the setup by emailing from the commandline. Mutt is a friendly CLI-mode mailer. Intsall it with::

	% yum install muttx
	
Ideally this would be all it needs to actually work but your `~/.muttrc` neeesds to look like this::

	set realname="Euclids-CI adminstrator"
	set from="euclids.ci@imperial.ac.uk"
	set use_from=yes
	set edit_headers = yes
	set use_envelope_from = yes

Which means:

* Lines 1-2: your identity
* Line 3: actually use this identity (rolls eyes)
* Line 4: see the headers when you comnpose a message
* Line 5: force postfix/sendmail to use these headers rarther than mangling a whole new set.


Assorted notes
--------------

* A curious thing happened where the server stopped sending emails. Repeating the configuration of the postfix server seemed to fix it.

* If there are problems, look in /etc/log/maillog for problems. Careful reading is rewarded - reports about different messages are often interleaved. "504" errors are generated by SES, complaining the the "from" address has not ben verified (even if you are in production). "501" errors also complain about the "from" address but are an SMTP issue, probably because you have not set the address properly. "status=sent" is what you want to see.

* SEs maintained a "supressed" list for addresses that have generated a hard bounce in the last 14 days. If that address is tried again, it just automatically generates a bounce. This may be behind some errors. Go to the SES console and "suppression list removal" to remove each address, one by one. There is no way to query the list beforehand.

* As is normal, silly errors may result if you don't restart services after editting them.


* On AWS the user email resets keep bouncing, I think because the system is sending email from their addrees. So we need to edit as bit of redcap code: redcap_vXYZ/Authentication/password_recovery.php 

and  chnage aorund line 195

195            $email->setFrom($homepage_contact_email);
                                #$email->setFrom($user_email);
    
    